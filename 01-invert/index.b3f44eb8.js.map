{"mappings":"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","sources":["src/01-invert/index.js","node_modules/@swc/helpers/src/_define_property.mjs","src/scene-orthocam.js","src/01-invert/vert.glsl","src/01-invert/frag.glsl"],"sourcesContent":["import * as THREE from 'three'\nimport Scene from '../scene-orthocam'\n\nimport vertexShader from './vert.glsl'\nimport fragmentShader from './frag.glsl'\n\nconst loader = new THREE.TextureLoader()\n\nconst scene = new Scene()\n\nconst planeGeometry = new THREE.PlaneGeometry(1, 1)\nconst planeMaterial = new THREE.ShaderMaterial({\n\tvertexShader,\n\tfragmentShader,\n\tdefines: {\n\t\tPR: window.devicePixelRatio.toFixed(1),\n\t},\n})\n\nclass Plane {\n\tbounds = {}\n\tmouseX = -1\n\tmouseY = -1\n\n\tconstructor(el) {\n\t\tthis.el = el\n\t\tthis.img = el.querySelector('img')\n\t\tthis.geometry = planeGeometry\n\t\tthis.material = planeMaterial.clone()\n\t\tthis.mesh = new THREE.Mesh(this.geometry, this.material)\n\n\t\tlet tex = loader.load(this.img.src)\n\t\tthis.setBounds()\n\t\tthis.setPos()\n\n\t\tthis.material.uniforms = {\n\t\t\tu_time: { value: 0 },\n\t\t\tu_image: { type: 't', value: tex },\n\t\t\tu_amount: { value: 0 },\n\t\t\tu_mouse: {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: new THREE.Vector2(),\n\t\t\t},\n\t\t\tu_res: {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: new THREE.Vector2(this.bounds.width, this.bounds.height),\n\t\t\t},\n\t\t}\n\t}\n\n\tsetBounds() {\n\t\tconst rect = this.img.getBoundingClientRect()\n\t\tthis.bounds = {\n\t\t\tleft: rect.left / scene.windowWidth,\n\t\t\tright: rect.right / scene.windowWidth,\n\t\t\twidth: rect.width,\n\t\t\tscaleX: rect.width / scene.windowWidth,\n\t\t\ttop: rect.top / scene.windowHeight,\n\t\t\tbottom: rect.bottom / scene.windowHeight,\n\t\t\theight: rect.height,\n\t\t\tscaleY: rect.height / scene.windowHeight,\n\t\t}\n\t}\n\n\tsetPos() {\n\t\tthis.mesh.scale.set(this.bounds.scaleX, this.bounds.scaleY)\n\t\tthis.mesh.position.x = this.bounds.left + this.bounds.scaleX / 2\n\t\tthis.mesh.position.y = -this.bounds.top - this.bounds.scaleY / 2\n\t}\n\n\tresize() {\n\t\tthis.setBounds()\n\t\tthis.setPos()\n\t}\n\n\tscroll() {\n\t\tthis.setBounds()\n\t\tthis.setPos()\n\t}\n\n\ttick(time, mouseX, mouseY) {\n\t\tthis.material.uniforms.u_time.value = time\n\t\tthis.mouseX = lerp(this.mouseX, mouseX, 0.1)\n\t\tthis.mouseY = lerp(this.mouseY, mouseY, 0.1)\n\t\tthis.material.uniforms.u_mouse.value = [this.mouseX, this.mouseY]\n\t}\n}\n\nlet els = document.querySelectorAll('.plane-wrap')\nwindow.planes = []\n\nfunction initPlane(el) {\n\tlet plane = new Plane(el)\n\tscene.addPlane(plane)\n\twindow.planes.push(plane)\n}\nels.forEach((el) => {\n\tlet img = el.querySelector('img')\n\tif (img.complete) {\n\t\tinitPlane(el)\n\t} else {\n\t\timg.addEventListener('load', () => initPlane(el))\n\t}\n})\n\nfunction lerp(a, b, t) {\n\treturn a + (b - a) * t\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import * as THREE from 'three'\n\nexport default class Scene {\n\tplanes = []\n\tmouseX = 0\n\tmouseY = 0\n\n\tconstructor() {\n\t\tlet { innerWidth, innerHeight } = window\n\n\t\tthis.windowWidth = innerWidth\n\t\tthis.windowHeight = innerHeight\n\t\tthis.scene = new THREE.Scene()\n\t\tthis.camera = new THREE.OrthographicCamera(0, 1, 0, -1)\n\t\tthis.camera.position.set(0, 0, 1)\n\n\t\tthis.renderer = new THREE.WebGLRenderer({\n\t\t\talpha: true,\n\t\t\tantialias: true,\n\t\t})\n\t\tthis.renderer.setPixelRatio(window.devicePixelRatio)\n\t\tthis.renderer.setSize(innerWidth, innerHeight)\n\t\tthis.clock = new THREE.Clock()\n\n\t\tthis.addToDom()\n\t\tthis.onResize()\n\t\twindow.requestAnimationFrame(() => this.tick())\n\t\twindow.addEventListener('resize', () => this.onResize())\n\t\twindow.addEventListener('scroll', () => this.onScroll())\n\t\twindow.addEventListener('mousemove', (e) => this.onMouse(e))\n\t\twindow.addEventListener('mousemove', (e) => this.firstMouseMove(e), {\n\t\t\tonce: true,\n\t\t})\n\t}\n\n\tfirstMouseMove(e) {\n\t\tthis.mouseX = e.clientX / this.windowWidth\n\t\tthis.mouseY = e.clientY / this.windowHeight\n\n\t\tthis.planes.forEach((plane) => {\n\t\t\tlet xOff = this.mouseX - plane.bounds.left\n\t\t\tplane.mouseX = xOff / plane.bounds.scaleX\n\t\t\tlet yOff = this.mouseY - plane.bounds.top\n\t\t\tplane.mouseY = yOff / plane.bounds.scaleY\n\t\t})\n\t}\n\n\taddPlane(plane) {\n\t\tthis.scene.add(plane.mesh)\n\t\tthis.planes.push(plane)\n\t}\n\n\taddToDom() {\n\t\tdocument.body.appendChild(this.renderer.domElement)\n\t}\n\n\ttick() {\n\t\tlet time = this.clock.getElapsedTime()\n\t\tthis.planes.forEach((plane, i) => {\n\t\t\tlet xOff = this.mouseX - plane.bounds.left\n\t\t\tlet planeMouseX = xOff / plane.bounds.scaleX\n\t\t\tlet yOff = this.mouseY - plane.bounds.top\n\t\t\tlet planeMouseY = yOff / plane.bounds.scaleY\n\n\t\t\tplane.tick(time, planeMouseX, planeMouseY)\n\t\t\t// plane.tick(time, 0.5, 0.5)\n\t\t\t// planeMouseX goes from 0 - 1 left to right over image\n\t\t\t// planeMouseY goes from 0 - 1 from top to bottom of image\n\t\t})\n\n\t\tthis.renderer.render(this.scene, this.camera)\n\t\twindow.requestAnimationFrame(() => this.tick())\n\t}\n\n\tonMouse(e) {\n\t\tthis.mouseX = e.clientX / this.windowWidth\n\t\tthis.mouseY = e.clientY / this.windowHeight\n\t}\n\n\tonResize() {\n\t\tlet { innerWidth, innerHeight } = window\n\t\tthis.renderer.setSize(innerWidth, innerHeight)\n\t\tthis.camera.updateProjectionMatrix()\n\n\t\tthis.windowWidth = innerWidth\n\t\tthis.windowHeight = innerHeight\n\n\t\tthis.planes.forEach((plane) => {\n\t\t\tplane.resize(innerWidth, innerHeight)\n\t\t})\n\t}\n\n\tonScroll() {\n\t\tthis.planes.forEach((plane) => {\n\t\t\tplane.scroll(this.windowWidth, this.windowHeight)\n\t\t})\n\t}\n}\n\nfunction scale(input, aMin, aMax, bMin, bMax) {\n\treturn ((input - aMin) * (bMax - bMin)) / (aMax - aMin) + bMin\n}\n\nfunction lerp(a, b, t) {\n\treturn a + (b - a) * t\n}\n","varying vec2 v_uv;\n\nvoid main() {\n  v_uv = uv;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}","uniform vec2 u_res;\nuniform sampler2D u_image;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvarying vec2 v_uv;\n\nvoid main() {\n    vec2 uv = v_uv;\n    vec2 resolution = u_res * PR;\n\n    vec2 st = uv;\n    vec2 mouse = vec2(u_mouse.x, 1.0 - u_mouse.y);\n    // these make it so the mouse hover can be a circle,\n    // even if the image is not square \n    mouse.x *= resolution.x / resolution.y;\n    st.x *= resolution.x / resolution.y;\n\n    float pct = distance(st, mouse);\n    float offset = smoothstep(0.4, 0.399, pct);\n\n    vec4 image = texture2D(u_image, v_uv);\n    vec4 inverted = vec4(vec3(1.0 - image.rgb), 1.0);\n    vec4 img = mix(image, inverted, offset);\n\n    gl_FragColor = img;\n}"],"names":[],"version":3,"file":"index.b3f44eb8.js.map"}